@model quangcao.Models.TinTuc
@using System.Security.Claims
@{
    ViewData["Title"] = Model.TieuDe;
    var formattedDate = Model.NgayDang.ToString("dd MMMM, yyyy");
}
<link href="~/css/tintucchitiet.css" rel="stylesheet" />
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, maximum-scale=5.0" />
    <title>@ViewData["Title"]</title>

    <!-- Preload critical resources -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://cdn.jsdelivr.net">

    <!-- Critical CSS inline để load nhanh trên mobile -->
    <style>
        /* Critical CSS for mobile */
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
            background-color: #f8fafc;
        }

        .container {
            width: 100%;
            padding-left: 15px;
            padding-right: 15px;
            margin: 0 auto;
        }

        img {
            max-width: 100%;
            height: auto;
        }

        * {
            box-sizing: border-box;
        }
    </style>

    <!-- External CSS - load async để không block rendering -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" media="print" onload="this.media='all'">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" media="print" onload="this.media='all'">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Merriweather:wght@300;400;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet" media="print" onload="this.media='all'">

    <!-- Fallback for browsers that don't support onload -->
    <noscript>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Merriweather:wght@300;400;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
    </noscript>
</head>
<body>
    <!-- Reading progress bar -->
    <div class="news-reading-progress-container">
        <div class="news-reading-progress-bar" id="readingProgressBar"></div>
    </div>

    <!-- Header with featured image background -->
    <header class="news-detail-header">
        <div class="news-header-overlay"></div>
        @if (!string.IsNullOrEmpty(Model.HinhAnh))
        {
            <div class="news-header-bg" style="background-image: url('@Url.Content("~/" + Model.HinhAnh)');"></div>
        }
        else
        {
            <div class="news-header-bg" style="background-image: url('@Url.Content("~/images/default-header.jpg")');"></div>
        }

        <div class="container">
            <div class="news-header-content">
                <div class="news-category">
                    <span class="news-category-badge">Tin tức</span>
                </div>
                <h1 class="news-title">@Model.TieuDe</h1>
                <div class="news-meta">
                    <div class="news-date">
                        <i class="bi bi-calendar3"></i> @formattedDate
                    </div>
                    <div class="news-reading-time">
                        <i class="bi bi-clock"></i> <span id="reading-time">5 phút đọc</span>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <!-- Container for content -->
    <div class="news-container">
        <div class="container">
            <div class="news-navigation">
                <a href="@Url.Action("Index", "TinTuc")" class="news-back-link">
                    <i class="bi bi-arrow-left"></i> Quay lại danh sách
                </a>
                <div class="news-actions-top">
                    @{
                        var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                    }
                    @if (Model != null && Model.User?.Id == currentUserId)
                    {
                        <a asp-action="Edit" asp-route-id="@Model.IdTinTuc" class="news-action-btn news-edit-btn">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                    }
                    <button type="button" class="news-action-btn news-print-btn" id="printButton">
                        <i class="bi bi-printer"></i>
                    </button>
                    <button type="button" class="news-action-btn news-reader-btn" id="readerModeButton">
                        <i class="bi bi-book"></i>
                    </button>
                </div>
            </div>

            <div class="news-layout">
                <!-- Main content column -->
                <main class="news-main">
                    <article class="news-content">
                        @Html.Raw(Model.NoiDung)
                    </article>

                    <!-- Tags -->
                    <div class="news-tags">
                        <span class="news-tags-title"><i class="bi bi-tags"></i> Chủ đề:</span>
                        <div class="news-tags-list">
                            @if (ViewBag.Tags != null && ViewBag.Tags.Count > 0)
                            {
                                foreach (var tag in ViewBag.Tags)
                                {
                                    <a href="@Url.Action("Index", "TinTuc", new { tag = tag })" class="news-tag">@tag</a>
                                }
                            }
                            else
                            {
                                <a href="#" class="news-tag">Tin tức</a>
                                <a href="#" class="news-tag">Sự kiện</a>
                                <a href="#" class="news-tag">Cập nhật</a>
                            }
                        </div>
                    </div>

                    <!-- Share -->
                    <div class="news-share">
                        <h4 class="news-share-title">Chia sẻ bài viết</h4>
                        <div class="news-share-buttons">
                            <a href="#" class="news-share-btn news-facebook" onclick="shareOnFacebook(); return false;" aria-label="Chia sẻ lên Facebook">
                                <i class="bi bi-facebook"></i> Facebook
                            </a>
                            <a href="#" class="news-share-btn news-twitter" onclick="shareOnTwitter(); return false;" aria-label="Chia sẻ lên Twitter">
                                <i class="bi bi-twitter"></i> Twitter
                            </a>
                            <a href="#" class="news-share-btn news-linkedin" onclick="shareOnLinkedIn(); return false;" aria-label="Chia sẻ lên LinkedIn">
                                <i class="bi bi-linkedin"></i> LinkedIn
                            </a>
                            <a href="#" class="news-share-btn news-email" onclick="shareByEmail(); return false;" aria-label="Chia sẻ qua Email">
                                <i class="bi bi-envelope"></i> Email
                            </a>
                        </div>
                    </div>
                </main>

                <!-- Sidebar column -->
                <aside class="news-sidebar">
                    <!-- Popular posts widget -->
                    <div class="news-sidebar-widget news-popular-widget">
                        <h3 class="news-widget-title">Bài viết phổ biến</h3>
                        <div class="news-popular-posts">
                            @if (ViewBag.PopularPosts != null && ViewBag.PopularPosts.Count > 0)
                            {
                                int index = 1;
                                foreach (var post in ViewBag.PopularPosts)
                                {
                                    <div class="news-popular-post">
                                        <div class="news-post-number">@(index.ToString().PadLeft(2, '0'))</div>
                                        <div class="news-post-info">
                                            <h5><a href="@Url.Action("Details", "TinTucs", new { id = post.IdTinTuc })">@post.TieuDe</a></h5>
                                            <div class="news-post-meta">
                                                <span><i class="bi bi-calendar3"></i> @post.NgayDang.ToString("dd/MM/yyyy")</span>
                                                <span><i class="bi bi-eye"></i> @(post.ViewCount ?? 0) lượt xem</span>
                                            </div>
                                        </div>
                                    </div>
                                    index++;
                                }
                            }
                            else
                            {
                                <!-- Placeholder popular posts -->
                                <div class="news-popular-post">
                                    <div class="news-post-number">01</div>
                                    <div class="news-post-info">
                                        <h5><a href="#">Tin tức mới nhất về sự kiện</a></h5>
                                        <div class="news-post-meta">
                                            <span><i class="bi bi-calendar3"></i> 15/05/2023</span>
                                            <span><i class="bi bi-eye"></i> 1.2k lượt xem</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="news-popular-post">
                                    <div class="news-post-number">02</div>
                                    <div class="news-post-info">
                                        <h5><a href="#">Cập nhật thông tin mới</a></h5>
                                        <div class="news-post-meta">
                                            <span><i class="bi bi-calendar3"></i> 10/05/2023</span>
                                            <span><i class="bi bi-eye"></i> 980 lượt xem</span>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Related posts widget -->
                    <div class="news-sidebar-widget news-related-widget">
                        <h3 class="news-widget-title">Bài viết liên quan</h3>
                        <div class="news-related-posts">
                            @if (ViewBag.RelatedNews != null && ViewBag.RelatedNews.Count > 0)
                            {
                                foreach (var relatedNews in ViewBag.RelatedNews)
                                {
                                    <div class="news-related-post">
                                        <div class="news-related-image">
                                            @if (!string.IsNullOrEmpty(relatedNews.HinhAnh))
                                            {
                                                <a href="@Url.Action("Details", "TinTucs", new { id = relatedNews.IdTinTuc })">
                                                    <img src="@Url.Content("~/" + relatedNews.HinhAnh)" alt="@relatedNews.TieuDe" class="img-fluid" loading="lazy" />
                                                </a>
                                            }
                                            else
                                            {
                                                <div class="news-placeholder-image">
                                                    <i class="bi bi-image"></i>
                                                </div>
                                            }
                                        </div>
                                        <div class="news-related-info">
                                            <h5>
                                                <a href="@Url.Action("Details", "TinTucs", new { id = relatedNews.IdTinTuc })">
                                                    @relatedNews.TieuDe
                                                </a>
                                            </h5>
                                            <div class="news-related-date">
                                                <i class="bi bi-calendar3"></i> @relatedNews.NgayDang.ToString("dd/MM/yyyy")
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <!-- Placeholder related posts -->
                                <div class="news-related-post">
                                    <div class="news-related-image">
                                        <div class="news-placeholder-image">
                                            <i class="bi bi-image"></i>
                                        </div>
                                    </div>
                                    <div class="news-related-info">
                                        <h5><a href="#">Tin tức mới nhất về sự kiện</a></h5>
                                        <div class="news-related-date">
                                            <i class="bi bi-calendar3"></i> 15/05/2023
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Newsletter widget -->
                    <div class="news-sidebar-widget news-newsletter-widget">
                        <h3 class="news-widget-title">Đăng ký nhận tin</h3>
                        <p class="news-newsletter-desc">Nhận thông báo khi có bài viết mới</p>
                        <form class="news-newsletter-form" method="post" action="@Url.Action("Subscribe", "Newsletter")">
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                <input type="email" class="form-control" name="email" placeholder="Email của bạn" required>
                            </div>
                            <button type="submit" class="btn btn-primary news-btn-subscribe">
                                <i class="bi bi-envelope-check"></i> Đăng ký
                            </button>
                        </form>
                    </div>
                </aside>
            </div>
        </div>
    </div>

    <!-- Reader Mode -->
    <div id="readerModeOverlay" class="news-reader-mode-overlay">
        <div class="news-reader-mode-container">
            <div class="news-reader-mode-header">
                <button id="closeReaderMode" class="news-close-reader-mode">
                    <i class="bi bi-x-lg"></i>
                </button>
                <h2 class="news-reader-title">@Model.TieuDe</h2>
                <div class="news-reader-meta">
                    <span><i class="bi bi-calendar3"></i> @formattedDate</span>
                </div>
            </div>
            <div class="news-reader-mode-content">
                <!-- Content will be copied here by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Load CSS after critical content -->
    <style>
        @ViewBag.CustomCSS
    </style>

    <!-- JavaScript at bottom for better performance -->
    <script>
        // Mobile-optimized JavaScript
        document.addEventListener("DOMContentLoaded", function() {
            // Calculate reading time
            const calculateReadingTime = () => {
                const content = document.querySelector(".news-content");
                if (content) {
                    const text = content.textContent || "";
                    const wordCount = text.split(/\s+/).length;
                    const readingTime = Math.ceil(wordCount / 200);
                    const readingTimeElement = document.getElementById("reading-time");
                    if (readingTimeElement) {
                        readingTimeElement.textContent = readingTime + " phút đọc";
                    }
                }
            };

            // Reading progress bar with throttling
            const setupReadingProgress = () => {
                const progressBar = document.getElementById("readingProgressBar");
                if (progressBar) {
                    let ticking = false;

                    const updateProgress = () => {
                        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
                        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
                        const scrolled = (winScroll / height) * 100;
                        progressBar.style.width = scrolled + "%";
                        ticking = false;
                    };

                    window.addEventListener("scroll", function() {
                        if (!ticking) {
                            requestAnimationFrame(updateProgress);
                            ticking = true;
                        }
                    }, { passive: true });
                }
            };

            // Reader mode functionality
            const setupReaderMode = () => {
                const readerModeButton = document.getElementById("readerModeButton");
                const closeReaderMode = document.getElementById("closeReaderMode");
                const readerModeOverlay = document.getElementById("readerModeOverlay");
                const readerModeContent = document.querySelector(".news-reader-mode-content");
                const articleContent = document.querySelector(".news-content");

                if (readerModeButton && closeReaderMode && readerModeOverlay && readerModeContent && articleContent) {
                    readerModeButton.addEventListener("click", function() {
                        readerModeContent.innerHTML = articleContent.innerHTML;
                        readerModeOverlay.style.display = "block";
                        setTimeout(function() {
                            readerModeOverlay.style.opacity = "1";
                        }, 10);
                        document.body.style.overflow = "hidden";
                    });

                    closeReaderMode.addEventListener("click", function() {
                        readerModeOverlay.style.opacity = "0";
                        setTimeout(function() {
                            readerModeOverlay.style.display = "none";
                            document.body.style.overflow = "auto";
                        }, 300);
                    });

                    // Close on overlay click
                    readerModeOverlay.addEventListener("click", function(e) {
                        if (e.target === readerModeOverlay) {
                            closeReaderMode.click();
                        }
                    });
                }
            };

            // Print functionality
            const setupPrintButton = () => {
                const printButton = document.getElementById("printButton");
                if (printButton) {
                    printButton.addEventListener("click", function() {
                        window.print();
                    });
                }
            };

            // Mobile-specific optimizations
            const mobileOptimizations = () => {
                // Prevent zoom on input focus (iOS)
                const inputs = document.querySelectorAll('input[type="email"], input[type="text"]');
                inputs.forEach(function(input) {
                    input.addEventListener('focus', function() {
                        input.style.fontSize = '16px';
                    });
                });

                // Add touch-friendly hover effects
                const hoverElements = document.querySelectorAll('.news-action-btn, .news-share-btn, .news-tag');
                hoverElements.forEach(function(element) {
                    element.addEventListener('touchstart', function() {
                        element.classList.add('touch-active');
                    });
                    element.addEventListener('touchend', function() {
                        setTimeout(function() {
                            element.classList.remove('touch-active');
                        }, 150);
                    });
                });
            };

            // Initialize all functions
            calculateReadingTime();
            setupReadingProgress();
            setupReaderMode();
            setupPrintButton();
            mobileOptimizations();

            // Lazy load images for better mobile performance
            if ('IntersectionObserver' in window) {
                const imageObserver = new IntersectionObserver(function(entries, observer) {
                    entries.forEach(function(entry) {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            img.src = img.dataset.src;
                            img.classList.remove('lazy');
                            imageObserver.unobserve(img);
                        }
                    });
                });

                const lazyImages = document.querySelectorAll('img[data-src]');
                lazyImages.forEach(function(img) {
                    imageObserver.observe(img);
                });
            }
        });

        // Social sharing functionality
        function shareOnFacebook() {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent(document.title);
            window.open("https://www.facebook.com/sharer/sharer.php?u=" + url + "&t=" + title, "_blank", "width=600,height=400");
        }

        function shareOnTwitter() {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent(document.title);
            window.open("https://twitter.com/intent/tweet?url=" + url + "&text=" + title, "_blank", "width=600,height=400");
        }

        function shareOnLinkedIn() {
            const url = encodeURIComponent(window.location.href);
            window.open("https://www.linkedin.com/sharing/share-offsite/?url=" + url, "_blank", "width=600,height=400");
        }

        function shareByEmail() {
            const url = encodeURIComponent(window.location.href);
            const title = encodeURIComponent(document.title);
            window.location.href = "mailto:?subject=" + title + "&body=" + url;
        }
    </script>

    <!-- Load external CSS asynchronously -->
    <script>
        // Load CSS files asynchronously to improve mobile performance
        function loadCSS(href) {
            const link = document.createElement('link');
            link.rel = 'stylesheet';
            link.href = href;
            document.head.appendChild(link);
        }

        // Load custom CSS
        loadCSS('@Url.Content("~/css/news-mobile.css")');
    </script>
</body>
</html>
