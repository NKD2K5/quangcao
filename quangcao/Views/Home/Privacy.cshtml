@model quangcao.Models.ViewModel.TrangChuViewModel
@{
    ViewData["Title"] = "Giới Thiệu";
    bool isAdmin = ViewData["IsAdmin"] != null && (bool)ViewData["IsAdmin"];

    string anhBiaUrl = Model?.AnhBia?.DuongDanAnh ?? "/images/default-cover.jpg";
    if (!string.IsNullOrEmpty(anhBiaUrl) && !anhBiaUrl.StartsWith("/") && !anhBiaUrl.StartsWith("http"))
    {
        anhBiaUrl = "/" + anhBiaUrl;
    }
}

<link href="~/css/Privacy.css" rel="stylesheet" />

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<!-- Header -->
<header class="page-header" style="background-image: url('@anhBiaUrl');">
    <div class="container">
        <h1 class="mb-4 reveal-text">@(Model?.GioiThieu?.TieuDe ?? "Giới Thiệu Về Chúng Tôi")</h1>
        <p class="lead">Công ty TNHH Sản xuất Thương mại in Vinh Phát - Đơn vị tiên phong trong lĩnh vực in nhanh kỹ thuật số tại TP Hải Dương</p>
    </div>
    @if (isAdmin)
    {
        <a asp-controller="Home" asp-action="CapNhatAnhBia" class="edit-button position-absolute top-0 end-0 m-3">
            <i class="fas fa-edit"></i> Sửa ảnh bìa
        </a>
    }
</header>

<!-- About Section -->
<section class="about-section">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <!-- Thêm ảnh giới thiệu -->
                <div class="about-image-container fade-in">
                    @if (Model?.GioiThieu != null && !string.IsNullOrEmpty(Model.GioiThieu.AnhGioiThieu))
                    {
                        <img src="@Model.GioiThieu.AnhGioiThieu" alt="Ảnh giới thiệu" class="img-fluid" 
                             onerror="this.src='/images/default-about.jpg'; this.onerror=null;" />
                    }
                    else
                    {
                        <img src="/images/default-about.jpg" alt="Ảnh giới thiệu" class="img-fluid" />
                    }
                </div>
            </div>
            <div class="col-md-6 about-content fade-in">
                <h2 class="section-title">Giới Thiệu Về Công Ty Chúng Tôi</h2>
                <div class="section-title-gradient"></div>
                <div class="lead mt-4">
                    @if (Model?.GioiThieu != null)
                    {
                        @Html.Raw(Model.GioiThieu.NoiDung)
                    }
                    else
                    {
                        <p>Công ty TNHH Sản xuất Thương mại In Huy Chức tự hào là đơn vị tiên phong trong lĩnh vực in nhanh kỹ thuật số tại TP Hải Dương. In Huy Chức không ngừng mở rộng và đầu tư đồng bộ hệ thống con người, máy móc để có thể đáp ứng tốt nhất mọi nhu cầu của khách hàng.</p>
                        <p>Trong tình hình kinh tế hiện nay, hầu như ai cũng muốn mình có được những sản phẩm giá rẻ, nhưng chỉ rẻ không thôi thì chưa đủ. Công ty in Huy Chức không cam kết sẽ tạo ra những sản phẩm in ấn có giá rẻ nhất nhưng chúng tôi đảm bảo rằng quý khách sẽ có được những sản phẩm chất lượng tốt nhất với giá cả hợp lý nhất.</p>
                    }
                </div>
            </div>
        </div>
    </div>
    @if (isAdmin)
    {
        <a asp-controller="Home" asp-action="CapNhatGioiThieu" class="edit-button position-absolute top-0 end-0 m-3">
            <i class="fas fa-edit"></i> Sửa nội dung
        </a>
    }
</section>

<!-- Services Section -->
<section class="services-section py-5">
    <div class="container">
        <h2 class="section-title mb-2 fade-in">SẢN PHẨM & DỊCH VỤ</h2>
        <div class="section-title-gradient"></div>
        <p class="section-description text-center mb-5 fade-in">Chúng tôi cung cấp đa dạng các dịch vụ in ấn chất lượng cao, đáp ứng mọi nhu cầu của khách hàng</p>

        <div class="services-grid">
            @{
                var services = new[]
                {
                    new { Icon = "fa-file-alt", Title = "In Tờ Rơi, Tờ Gấp", Desc = "Thiết kế và in ấn tờ rơi chuyên nghiệp, đa dạng kích thước và chất liệu", Link = "/san-pham/to-roi" },
                    new { Icon = "fa-shopping-bag", Title = "In Túi Giấy", Desc = "Sản xuất túi giấy cao cấp, in ấn sắc nét với nhiều mẫu mã đa dạng", Link = "/san-pham/tui-giay" },
                    new { Icon = "fa-box-open", Title = "In Bao Bì", Desc = "Thiết kế và sản xuất bao bì chuyên nghiệp, đảm bảo chất lượng", Link = "/san-pham/bao-bi" },
                    new { Icon = "fa-tag", Title = "In Tem Nhãn", Desc = "In tem nhãn sản phẩm với công nghệ hiện đại, bền đẹp", Link = "/san-pham/tem-nhan" },
                    new { Icon = "fa-book", Title = "In Catalogue", Desc = "Thiết kế và in ấn catalogue sang trọng, chuyên nghiệp", Link = "/san-pham/catalogue" },
                    new { Icon = "fa-box", Title = "In Hộp Giấy", Desc = "Sản xuất hộp giấy đựng sản phẩm với nhiều kích thước và mẫu mã", Link = "/san-pham/hop-giay" },
                    new { Icon = "fa-id-card", Title = "In Danh Thiếp", Desc = "Thiết kế và in ấn danh thiếp chuyên nghiệp, sang trọng", Link = "/san-pham/danh-thiep" },
                    new { Icon = "fa-print", Title = "Dịch Vụ In Khác", Desc = "Đa dạng dịch vụ in ấn khác như poster, banner, thiệp cưới...", Link = "/san-pham" }
                };
            }

            @foreach (var service in services)
            {
                <div class="service-card fade-in">
                    <div class="service-icon">
                        <i class="fas @service.Icon"></i>
                    </div>
                    <div class="service-content">
                        <h3>@service.Title</h3>
                        <p>@service.Desc</p>
                        <a href="@service.Link" class="service-link">
                            Xem chi tiết <i class="fas fa-arrow-right"></i>
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

<!-- Team Section -->
<section class="team-section">
    <div class="container">
        <h2 class="section-title mb-2 fade-in">ĐỘI NGŨ NHÂN VIÊN</h2>
        <div class="section-title-gradient"></div>
        <p class="team-title mb-5 fade-in">Những con người tâm huyết là cốt lõi thành công của In Vinh Phát</p>

        <div class="team-carousel">
            <div class="team-slides">
                @if (Model?.DanhSachNhanVien != null && Model.DanhSachNhanVien.Any())
                {
                    @for (int i = 0; i < Model.DanhSachNhanVien.Count; i++)
                    {
                        var nhanVien = Model.DanhSachNhanVien[i];
                        <div class="team-slide @(i == 0 ? "active" : "")">
                            <div class="team-member">
                                <div class="member-image">
                                    <img src="@(string.IsNullOrEmpty(nhanVien.AnhUrl) ? "/images/default-avatar.jpg" : nhanVien.AnhUrl)"
                                         alt="@nhanVien.HoTen"
                                         onerror="this.src='/images/default-avatar.jpg'; this.onerror=null;">
                                </div>
                                <div class="member-quote">
                                    "@(string.IsNullOrEmpty(nhanVien.TamHiet) ? "Đang cập nhật..." : nhanVien.TamHiet)"
                                </div>
                                <div class="member-name">@nhanVien.HoTen.ToUpper()</div>
                                <div class="member-position">@(string.IsNullOrEmpty(nhanVien.ViTri) ? "NHÂN VIÊN" : nhanVien.ViTri.ToUpper())</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="team-slide active">
                        <div class="team-member">
                            <div class="member-image">
                                <img src="/images/default-avatar.jpg" alt="Nhân viên">
                            </div>
                            <div class="member-quote">
                                "Đang cập nhật thông tin..."
                            </div>
                            <div class="member-name">ĐANG CẬP NHẬT</div>
                            <div class="member-position">CHỨC VỤ</div>
                        </div>
                    </div>
                }
            </div>

            <div class="carousel-controls">
                <button class="carousel-control prev" id="prevSlide">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <button class="carousel-control next" id="nextSlide">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>

            <!-- Thêm thanh dots -->
            <div class="slider-dots"></div>
        </div>
    </div>
    @if (isAdmin)
    {
        <a asp-controller="Home" asp-action="CapNhatNhanVien" class="edit-button position-absolute top-0 end-0 m-3">
            <i class="fas fa-edit"></i> Quản lý đội ngũ
        </a>
    }
</section>

@section Scripts {
    <script>
        // Team Carousel with Enhanced Effects
        document.addEventListener('DOMContentLoaded', function () {
            const slides = document.querySelectorAll('.team-slide');
            if (slides.length > 0) {
                const prevBtn = document.getElementById('prevSlide');
                const nextBtn = document.getElementById('nextSlide');
                let currentIndex = 0;
                let interval;

                // Create dots if they don't exist
                const dotsContainer = document.querySelector('.slider-dots');
                if (slides.length > 0) {
                    dotsContainer.innerHTML = '';
                    for (let i = 0; i < slides.length; i++) {
                        const dot = document.createElement('span');
                        dot.classList.add('slider-dot');
                        if (i === 0) dot.classList.add('active');
                        dot.addEventListener('click', () => {
                            showSlide(i);
                            stopAutoSlide();
                            startAutoSlide();
                        });
                        dotsContainer.appendChild(dot);
                    }
                }

                function showSlide(index) {
                    // Update dots
                    const dots = document.querySelectorAll('.slider-dot');
                    dots.forEach((dot, i) => {
                        dot.classList.toggle('active', i === index);
                    });

                    // Hide all slides
                    slides.forEach(slide => {
                        slide.classList.remove('active');
                    });

                    // Show the selected slide with fadeIn animation
                    slides[index].classList.add('active');
                    currentIndex = index;
                }

                function nextSlide() {
                    currentIndex = (currentIndex + 1) % slides.length;
                    showSlide(currentIndex);
                }

                function prevSlide() {
                    currentIndex = (currentIndex - 1 + slides.length) % slides.length;
                    showSlide(currentIndex);
                }

                // Auto slide
                function startAutoSlide() {
                    interval = setInterval(nextSlide, 5000);
                }

                function stopAutoSlide() {
                    clearInterval(interval);
                }

                // Event listeners
                if (prevBtn && nextBtn) {
                    prevBtn.addEventListener('click', () => {
                        stopAutoSlide();
                        prevSlide();
                        startAutoSlide();
                    });

                    nextBtn.addEventListener('click', () => {
                        stopAutoSlide();
                        nextSlide();
                        startAutoSlide();
                    });
                }

                // Start auto sliding
                startAutoSlide();

                // Pause on hover
                const carousel = document.querySelector('.team-carousel');
                carousel.addEventListener('mouseenter', stopAutoSlide);
                carousel.addEventListener('mouseleave', startAutoSlide);
            }
        });

        // Nâng cao hiệu ứng scroll animation - hiệu ứng như Home
        document.addEventListener('DOMContentLoaded', function() {
            // Thiết lập IntersectionObserver với các tùy chọn
            const observerOptions = {
                threshold: 0.15,
                rootMargin: '-50px 0px'
            };

            // Xử lý gradient line dưới tiêu đề
            const titleObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animated');
                        
                        // Áp dụng hiệu ứng cho gradient line nếu có
                        const gradientLine = entry.target.nextElementSibling;
                        if (gradientLine && gradientLine.classList.contains('section-title-gradient')) {
                            setTimeout(() => {
                                gradientLine.classList.add('animated');
                            }, 200);
                        }
                        
                        titleObserver.unobserve(entry.target);
                    }
                });
            }, observerOptions);
            
            // Tạo observer cho các gradient lines trực tiếp
            const lineObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        setTimeout(() => {
                            entry.target.classList.add('animated');
                        }, 300);
                        lineObserver.unobserve(entry.target);
                    }
                });
            }, observerOptions);

            // Quan sát các tiêu đề section
            document.querySelectorAll('.section-title').forEach(el => {
                titleObserver.observe(el);
            });
            
            // Quan sát trực tiếp các gradient lines
            document.querySelectorAll('.section-title-gradient').forEach(el => {
                lineObserver.observe(el);
            });

            // Áp dụng hiệu ứng cho các phần tử khác nhau
            // Fade in default
            document.querySelectorAll('.fade-in').forEach(el => {
                const fadeObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('animated');
                            fadeObserver.unobserve(entry.target);
                        }
                    });
                }, observerOptions);
                
                fadeObserver.observe(el);
            });

            // Slide in from sides - Alternating
            document.querySelectorAll('.service-card').forEach((el, index) => {
                if (index % 2 === 0) {
                    el.classList.add('slide-in-left');
                } else {
                    el.classList.add('slide-in-right');
                }
                
                const cardObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            setTimeout(() => {
                                entry.target.classList.add('animated');
                            }, 100 + (index * 100));
                            cardObserver.unobserve(entry.target);
                        }
                    });
                }, observerOptions);
                
                cardObserver.observe(el);
            });

            // Special elements
            document.querySelectorAll('.about-image-container').forEach(el => {
                el.classList.add('zoom-in');
                const specialObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('animated');
                            specialObserver.unobserve(entry.target);
                        }
                    });
                }, observerOptions);
                
                specialObserver.observe(el);
            });

            // Reveal text animation for header
            const revealElements = document.querySelectorAll('.reveal-text');
            revealElements.forEach(element => {
                element.style.opacity = '1';
            });

            // Scroll to element function
            function scrollToElement(elementSelector) {
                const element = document.querySelector(elementSelector);
                if (element) {
                    const headerOffset = 100;
                    const elementPosition = element.getBoundingClientRect().top;
                    const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
                    
                    window.scrollTo({
                        top: offsetPosition,
                        behavior: "smooth"
                    });
                }
            }

            // Scroll to relevant section when clicking nav items
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const targetId = this.getAttribute('href');
                    scrollToElement(targetId);
                });
            });
        });
    </script>
}